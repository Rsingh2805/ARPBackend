# Generated by Django 2.0.1 on 2018-04-10 05:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ARPuser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('user_type', models.CharField(choices=[('EMP', 'Employee'), ('ADM', 'Administrator')], default='EMP', max_length=3, verbose_name='User Type')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='Email Address')),
                ('phone', models.CharField(max_length=10, verbose_name='Contact Number')),
                ('machine_status', models.CharField(choices=[('INF', 'Infected'), ('NOT', 'Not Infected')], default='NOT', max_length=3, verbose_name='PC Status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'ARP users',
            },
        ),
    ]
